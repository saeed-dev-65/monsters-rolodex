{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","logo.svg","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCHbC,EAAS,SAACR,GACjB,OAAQ,qBAAKC,UAAU,YAAf,SACLD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCJlBO,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBAAOC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCgCFG,E,kDAjCf,aAAe,IAAD,8BACV,gBAYJH,aAAe,SAACI,GAChB,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZhC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAY,IAJN,E,gEAQO,IAAD,OAChBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAC7DA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAOrD,IAAD,EACwBC,KAAKN,MAA3Bb,EADF,EACEA,SAASU,EADX,EACWA,YACVU,EAAkBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAEA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAEjG,OACI,sBAAK9B,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CACIW,YAAY,mBACZC,aAAce,KAAKf,eACvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BlBI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCPC,ICQfO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d120dcc9.chunk.js","sourcesContent":["import react from 'react'\r\nimport './card.style.css'\r\n\r\nexport const Card = props=>(\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt='monster'/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)\r\n","import react from 'react';\r\nimport './card-list.style.css'\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList=(props)=>{\r\n      return (<div className='card-list'>\r\n        {props.monsters.map(monster=>(\r\n            <Card key={monster.id} monster ={monster} />))\r\n        }\r\n        </div>);\r\n}","import react from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox=({placeholder,handleChange})=>(\r\n    <input type=\"search\"\r\n           className=\"search\"\r\n           placeholder={placeholder}\r\n           onChange={handleChange}/>\r\n);\r\n","import { Component } from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField:'',\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users').then(response =>\n            response.json()).then(users => this.setState({monsters:users}))\n\n    }\n    handleChange = (e)=>{\n    this.setState({searchField:e.target.value})\n    }\n\n    render() {\n        const {monsters,searchField}=this.state;\n        const filteredMonster = monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n        return (\n            <div className='App'>\n                <h1>Monster Rolodex</h1>\n                <SearchBox\n                    placeholder='search a monster'\n                    handleChange={this.handleChange}/>\n                <CardList monsters={filteredMonster}/>\n\n            </div>\n        )\n    }\n}\n    export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport logo from \"./logo.svg\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}